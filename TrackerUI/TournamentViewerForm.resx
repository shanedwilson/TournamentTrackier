<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>